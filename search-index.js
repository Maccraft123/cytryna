var searchIndex = JSON.parse('{\
"cytryna":{"doc":"","t":"NNEGNNINNNNNNNNNNNNENNNNNNELLLLLLKKALLLLALLALLLLLLLLLLLLALALLLKAAALAAAALLLLLLLLLLLLMMMDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDNNNNNDEEENNDNNDNNIEEDNNNALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGIIDILLLLLLLLLLLLLLLLLKLLLKLLLLLLKLLLLENNDDEDEDNNNNNNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFNDDDNDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNDDDEDDSNSSSSSSSSSSDDSSNNNNNNSSNDDSDDDNNEDNNNNSSSSSSSNNNNSSSSSSDDDDEENNNESSSSSSSSSSDNDNDSSSSSNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLCCCCCCCSSSSDESNNNSNSSSNNDNNNDNNSNSNEDNNNNSSSNSNNNDDNSSSSDDNNDDEDDDNNSNSNSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNGDLLLLLLLLLLSSSSSSSDNSSNSDDSSSSESSSSSSDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDEDDSNSNNNSNNSGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BadAlign","Borrowed","CytrynaError","CytrynaResult","EnumValueOutOfRange","Err","FromBytes","HexError","InvalidHash","InvalidHeaderSize","InvalidLength","InvalidMagic","InvalidRegionPosition","KeyIndexFail","MissingKey","MissingRegion","NoKeyBag","Ok","Owned","OwnedOrBorrowed","S","SignatureCorrupted","SliceTooSmall","StreamCrypt","UnsupportedHeaderVersion","V","VecOrSlice","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes_ok","cast","cia","clone","clone","clone_into","clone_into","crypto","deref","deref","firm","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","hash","hash_ok","hb3dsx","into","into","into","min_size","ncch","prelude","smdh","source","string","ticket","titleid","tmd","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","actual","expected","what","Cia","CiaHeader","ContentRegion","ContentRegionIter","MetaRegion","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_ok","cast","cert_chain_region","clone","clone_into","content_region","data","dependencies","dependencies_iter","fmt","from","from","from","from","header","icon","idx","into","into","into","into","into_iter","meta_region","min_size","next","ticket_region","tmd_region","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Common","CommonN","EcdsaSha256","EcdsaSha256","EcdsaSha256","Generator","InvalidKeyType","InvalidKeyXYNType","KeyBag","KeyIndex","KeyIndexParseError","KeyType","N","NumberParseError","Rsa2048Sha256","Rsa2048Sha256","Rsa2048Sha256","Rsa4096Sha256","Rsa4096Sha256","Rsa4096Sha256","Signature","SignatureType","SignedData","SignedDataInner","Slot","X","Y","aes128_ctr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","content_chunks","content_count","data","data","default","eq","eq","equivalent","equivalent","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_str","from_string","get_key","global","hash","hash","into","into","into","into","into","into","into","into","into","into","key_index","keygen","new","set_key","source","title_id","title_key","title_key_raw","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Aes128CbcDec","Aes128CtrDec","BlockDecryptMut","KeyIvInit","NoPadding","StreamCipher","apply_keystream","apply_keystream_b2b","apply_keystream_inout","borrow","borrow_mut","clone","clone_into","decrypt_block_b2b_mut","decrypt_block_inout_mut","decrypt_block_mut","decrypt_blocks_b2b_mut","decrypt_blocks_inout_mut","decrypt_blocks_mut","decrypt_padded_b2b_mut","decrypt_padded_inout_mut","decrypt_padded_mut","decrypt_padded_vec_mut","decrypt_with_backend_mut","fmt","from","into","new","new_from_slices","pad","raw_pad","raw_unpad","to_owned","try_apply_keystream","try_apply_keystream_inout","try_from","try_into","type_id","unpad","CopyMethod","CpuMemcpy","Custom","Firm","FirmBuilder","FirmBuilderError","FirmHeader","FirmSignature","FirmwareSection","Ndma","NoArm11Entry","NoArm9Entry","NoSections","NoSig","RetailSighaxNand","RetailSighaxNtr","RetailSighaxSpi","SectionHeader","TooManySections","Xdma","add_fw_section","arm11_entrypoint","arm11_entrypoint","arm9_entrypoint","arm9_entrypoint","boot_priority","boot_priority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","bytes_ok","cast","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","copy_method","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash_ok","header","into","into","into","into","into","into","into","load_addr","min_size","new","offset","override_section","section_data","section_iter","sections","sig","signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","sha256","Absolute","Hb3dsx","Hb3dsxExheader","Hb3dsxHeader","Relative","Relocation","RelocationHeader","RelocationIter","RelocationType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_ok","cast","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","code_reloc_header","code_reloc_iter","code_reloc_table_offset","data_reloc_header","exheader","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","header","into","into","into","into","into","into","into_iter","min_size","next","rodata_reloc_header","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AccessControlInfo","Application","Application","Arm11Flags","Arm11KernelCaps","Arm11LocalSystemCaps","Arm11MemoryType","Arm9AccessControl","Arm9Descriptors","BOSS","Base","CARDBOARD","CAT_FILESYSTEM_TOOL","CAT_HARDWARE_CHECK","CAT_HOME_MENU","CAT_SYSTEM_APPLICATION","CAT_SYSTEM_SETTINGS","CHILD","COMPRESS_EXEFS_CODE","CORE","CREATE_SEED","CodeSetInfo","ContentType","DATA","DEBUG","Dev1_178Mb","Dev1_96Mb","Dev2_124Mb","Dev2_80Mb","Dev3_72Mb","Dev4_32Mb","EXECUTABLE","EXPORT_IMPORT_IVS","EnableSyscalls","Exheader","ExheaderFlags","FIXED_CRYPTO_KEY","Flag0","Flag1","FsAccessInfo","HandleTableSize","InterruptInfo","KernelCap","KernelCapRaw","KernelFlags","KernelReleaseVersion","Legacy","LibApplet","MANUAL","MOUNT_CARD_SPI","MOUNT_NAND","MOUNT_NANRO_WRITE","MOUNT_SDMC_WRITE","MOUNT_TWLN","MOUNT_WNAND","MapIoMemoryPageEnd","MapIoMemoryPageStart","MapMemoryRangeEnd","MapMemoryRangeStart","NANDRO_READONLY","NANDRO_WRITE_ACCESS","NANDRW","NEW_KEY_Y_GENERATOR","NO_CRYPTO","NO_MOUNT_ROM_FS","Ncch","NcchFlags","NcchFlagsOptions","NcchHeader","New3dsSystemMode","Old3dsSystemMode","Other","Prod124Mb","Prod64Mb","ResourceLimitCategory","SAVEDATA_MOVE","SDMC","SDMC_WRITEONLY","SD_APPLICATION","SD_APPLICATION","SEED_DB","SHELL","SHOP","SWITCH_CLEANUP","SYSTEMUPDATE","StorageInfo","SysApplet","SyscallMask","System","SystemControlInfo","TRIAL","TWL_CARD_BACKUP","TWL_NAND_DATA","USE_CARD_SPI","USE_SDIF3","Undefined","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","default","default","default","default","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","exefs","exefs","exefs_region","exheader","extend","extend","extend","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_slice","header","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_encrypted","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","logo_region","new","new","new","new","not","not","not","not","not","plain_region","remove","remove","remove","remove","remove","romfs","romfs_region","set","set","set","set","set","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","cacheable","end","major","minor","read_only","start","ExeFs","ExeFsHeader","ExeFsInner","FileHeader","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","file_by_header","file_by_name","file_header_by_name","file_headers_used","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","RomfsHeader","borrow","borrow_mut","from","into","try_from","try_into","type_id","Cia","Firm","FromBytes","Hb3dsx","Ncch","Smdh","Ticket","ALLOW_3D","AUSTRALIA","AUTOBOOT_GAMECART","AUTOSAVE_ON_EXIT","AgeRating","AgeRatingRegion","CHINA","Cero","Cgsrr","Cob","DISABLE_SD_SAVE_BACKUP","Dutch","ENABLED","EUROPE","EXTBANNER_USED","English","Esrb","EulaVersion","French","German","Grb","IconData","InvalidImageSize","Italian","JAPAN","Japanese","KOREA","Korean","Language","MatchmakerId","MissingIcon","MissingLongDesc","MissingPublisher","MissingShortDesc","NEW3DS_EXCLUSIVE","NORTH_AMERICA","NO_AGE_RESTRICTION","OnlySquaresAllowed","PENDING","PegiBbfc","PegiGen","PegiPrt","PixelIterator","PixelIteratorMut","Portugese","RECORD_USAGE","REGION_FREE","REGION_RATING_REQUIRED","REQUIRE_CTR_EULA","RegionLockout","Rgb565Pixel","Russian","SimplifiedChinese","Smdh","SmdhBuilder","SmdhError","SmdhFlags","SmdhIcon","SmdhTitle","Spanish","StringErr","TAIWAN","TraditionalChinese","USES_SAVE_DATA","Usk","VISIBLE_IN_HOMEMENU","age_rating","all","all","all","as_bytes","big_icon","bit_id","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","bytes_ok","cast","cec_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","contains","contains","contains","default","difference","difference","difference","empty","empty","empty","eula_version","extend","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_name","from_name","from_name","id","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_empty","is_empty","is_empty","iter","iter","iter","iter_names","iter_names","iter_names","long_desc","matchmaker_id","min_size","new","next","next","not","not","not","optimal_animation_default_frame","pixel_iter","pixel_iter_mut","publisher","raw_data","region_lockout","remove","remove","remove","set","set","set","short_desc","small_icon","source","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","title","to_bmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","width","with_icon","with_long_desc","with_publisher","with_short_desc","with_small_icon","expected","got","SizedCString","SizedCStringError","SizedCStringUtf16","TooBig","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","data","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","is_zero","is_zero","to_owned","to_owned","to_string","to_string","to_string_lossy","to_string_lossy","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","EcdsaSha256","Rsa2048Sha256","Rsa4096Sha256","Ticket","TicketInner","borrow","borrow_mut","bytes_ok","cast","fmt","key_index","min_size","title_key","title_key_raw","type_id","ADDON_CONTENTS","APPLET","AUTO_UPDATE_CONTENT","BASE","CANNOT_EXECUTION","CAN_SKIP_CONVERT_JUMP_ID","CONTENTS","Category","Ctr","DEMO","DLP_CHILD","Dsi","FIRMWARE","MaybeTitleId","MaybeTitleIdBe","NORMAL","NOT_REQUIRE_RIGHT_FOR_MOUNT","NOT_REQUIRE_USER_APPROVAL","PATCH","Platform","REQUIRE_BATCH_UPDATE","SHARED_CONTENT","SYSTEM","SYSTEM_APPLICATION","SYSTEM_CONTENT","TWL","TitleId","Wii","Wiiu","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","complement","contains","difference","empty","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_u64","id","insert","intersection","intersects","into","into","into","into","into","into_iter","is_all","is_empty","is_null","iter","iter_names","not","plat","remove","set","sub","sub_assign","symmetric_difference","to_bytes","to_le","to_owned","to_owned","to_owned","to_owned","to_owned","to_titleid","to_titleid","to_u64","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","CFM","ContentChunk","ContentIndex","ContentInfo","ContentType","DISC","Dlp","ENCRYPTED","EcdsaSha256","Main","Manual","OPTIONAL","Rsa2048Sha256","Rsa4096Sha256","SHARED","Tmd","TmdInner","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_ok","cast","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","complement","contains","content_chunks","content_count","difference","empty","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","id","idx","insert","intersection","intersects","into","into","into","into","into_iter","is_all","is_empty","is_nil","iter","iter_names","min_size","not","remove","set","size","sub","sub_assign","symmetric_difference","title_id","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","union"],"q":[[0,"cytryna"],[83,"cytryna::CytrynaError"],[86,"cytryna::cia"],[142,"cytryna::crypto"],[291,"cytryna::crypto::aes128_ctr"],[330,"cytryna::firm"],[454,"cytryna::hash"],[455,"cytryna::hb3dsx"],[541,"cytryna::ncch"],[1138,"cytryna::ncch::KernelCap"],[1144,"cytryna::ncch::exefs"],[1186,"cytryna::ncch::romfs"],[1194,"cytryna::prelude"],[1201,"cytryna::smdh"],[1595,"cytryna::smdh::SmdhError"],[1597,"cytryna::string"],[1643,"cytryna::ticket"],[1658,"cytryna::titleid"],[1797,"cytryna::tmd"],[1914,"core::clone"],[1915,"core::fmt"],[1916,"core::fmt"],[1917,"cipher::errors"],[1918,"core::error"],[1919,"core::option"],[1920,"alloc::string"],[1921,"core::result"],[1922,"core::any"],[1923,"core::iter::traits::iterator"],[1924,"core::marker"],[1925,"core::num::error"],[1926,"core::hash"],[1927,"inout::inout_buf"],[1928,"generic_array"],[1929,"inout::inout"],[1930,"inout::errors"],[1931,"block_padding"],[1932,"alloc::alloc"],[1933,"alloc::vec"],[1934,"cipher::block"],[1935,"core::fmt"],[1936,"core::iter::traits::collect"],[1937,"bitflags::iter"],[1938,"bitflags::iter"],[1939,"image::dynimage"],[1940,"core::str::error"],[1941,"alloc::string"]],"d":["","","Low-effort catch-all error type for cytryna library","","","Contains the error value","Simple trait to implement safe conversions from bytes","","","","","","","","","","","Contains the success value","","Contains either a box pointer to a type, or a reference to …","","","","","","","Contains either a (borrowed) byte slice or an (owned) Vec, …","","","","","","","Ensures that a byte slice is valid, checking everything …","Casts a byte slice to Self, it’s a required method …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","A function that brings it all together","","Ensures that in-struct hash value is valid. Not required …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Minimum size of byte slice for a type to be valid, it’s …","","","","","","","","","","","","","","","","","","","","","","","","CIA data","CIA Header data https://www.3dbrew.org/wiki/CIA#CIA_Header","Content region data","An iterator over content data, possibly decrypting them","CIA Meta region","","","","","","","","","","","","","Returns a referene to certificate chain region as a slice. …","","","Returns an iterator over contents","Returns a reference to data contained within","Returns dependencies as an array of MaybeTitleId","Returns an iterator over TitleId structs, skipping …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to CIA header","Returns SMDH data contained in this region","Returns the content index of this region","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","If CIA has a Meta region, returns a reference to it, …","","","Returns a reference to Ticket region","Returns a reference to Title metadata region","","","","","","","","","","","","","","","Index for common keyY used in Title Key decryption","Index for common normal-key used in Title Key decryption","ECDSA with SHA256 signature data, including padding","","","The generator key","","","Contains keys used for encrypting/decrypting data","Is this self-documenting? I think it is","An error type for KeyIndex parsing","Type of a 3DS key","Normal-key","","RSA_2048 SHA256 signature data, including padding","","","RSA_4096 SHA256 signature data, including padding","","","","Stores signature type of TMD and Ticket structs in a …","Stores SignedDataInner in a way that makes it possible to …","Contains signed data in a way that is generic over signed …","Key contained in 3DS’s AES slot","KeyX","KeyY","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns slice of content chunk","Returns the contet count","Returns stored data","Returns a reference to data stored inside","","","","","","Sets the KeyBag to be used for all crypto functions of …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Makes an instance of KeyBag from a string in format …","Returns a key if it is contained in global KeyBag instance","Returns reference to the global KeyBag instance","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the common key index","Generates a normal-key from X and Y keys and a keygen …","Makes an instance of KeyBag","Adds a key to KeyBag, overwriting previous data if there …","","Returns the Title ID of this TMD if it’s a valid TitleId …","Returns the decrypted title key","Returns the un-decrypted title key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decrypt-only functionality for block ciphers and modes …","Types which can be initialized from key and initialization …","Don’t pad the data. Useful for key wrapping.","Synchronous stream cipher core trait.","Apply keystream to data in-place.","Apply keystream to data buffer-to-buffer.","Apply keystream to <code>inout</code> data.","","","","","Decrypt <code>in_block</code> and write result to <code>out_block</code>.","Decrypt single <code>inout</code> block.","Decrypt single block in-place.","Decrypt blocks buffer-to-buffer.","Decrypt <code>inout</code> blocks.","Decrypt blocks in-place.","Decrypt input and unpad it buffer-to-buffer. Returns …","Decrypt input and unpad it. Returns resulting ciphertext …","Decrypt input and unpad it in-place. Returns resulting …","Decrypt input and unpad it in a newly allocated Vec. …","Decrypt data using backend provided to the rank-2 closure.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create new value from fixed length key and nonce.","Create new value from variable length key and nonce.","","","","","Apply keystream to data behind <code>buf</code>.","Apply keystream to <code>inout</code> data.","","","","","Contains copy method of a section","memcpy()","Custom signature data","FIRM file https://www.3dbrew.org/wiki/FIRM","FIRM builder","An error type for FirmBuilder","FIRM header data …","Contains signature data or sighax signature type","Contains Firmware Section data used in FIRM building","NDMA","","","","","Sighaxed signature for NAND-booting","Sighaxed signature for ntrboot","Sighaxed signature for SPI-boot","FIRM Section Header …","","XDMA","Adds a FirmwareSection","Returns entry point address for the ARM11 CPU","Sets the ARM11 entry point","Returns entry point address for ARM9 CPU","Sets the ARM9 entry point","Returns the boot priority, higher value = higher boot …","Sets the boot priority, default is 0","","","","","","","","","","","","","","","","","Builds the FIRM","Returns the builder for creating FIRM files","","","","","","","","","","","","","","","Returns the copy method of this section","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns raw SHA256 hash data of this section","","Returns a reference to FIRM Header","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the load address of this sectoin","","Creates an instance of FirmwareSection","Returns offset in FIRM file of this section","Overrides a section of a given index","Returns section data as a byte slice of a given header","Returns an iterator over section headers, ignoring headers …","Returns a reference to array of section headers","Returns a reference to raw signature data","Sets the signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes sha hash of a given byte slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exheader Access Control Info …","","","ARM11 Kernel Capabilities flag field data …","ARM11 Kernel Capabilities …","ARM11 Local system capabilities …","ARM11 Memory Type","ARM9 Access Control data …","ARM9 Access Control Descriptor data","","","","","","","","","","","","","idk what to put here","NCCH Content Type …","","","Dev1 (178MB of usable application memory) ","Dev1 (96MB of usable application memory) ","Dev2 (124MB of usable application memory) ","Dev2 (80MB of usable application memory) ","Dev3 (72MB of usable application memory) ","Dev4 (32MB of usable application memory) ","","","","NCCH Extended Header …","SystemControlInfo flags","","ARM11 Local system capabilities Flag0 data …","ARM11 Local system capabilities Flag1 data …","StorageInfo’s FS Access info flags …","","","Stores the decoded ARM11 Kernel Capability descriptor …","what do i even put here","","","Legacy(use Old3DS system mode)","","","","","","","","","","","","","","","","","","","NCCH File","NCCH flags data, …","NCCH option bit-masks …","NCCH Header data …","ARM11 Local system capabilities New3DS system mode data …","Stores the Old3DS system mode data …","","Prod (124MB of usable application memory) ","Prod (64MB of usable application memory) ","ARM11 Local system capabilities resource Limit Category","","","","","","","","","","","ARM11 Local system capabilities storage info …","","ARM11 enabled syscall mask","","Exheader SystemControlInfo …","","","","","","Undefined (unusable)","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","Returns ExeFS region data","Returns ExeFS region data as a byte slice","Returns a decrypted Exheader stored in OwnedOrBorrowed","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Returns a reference to NCCH Flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","Returns a reference to NCCH Header","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Check if data is encrypted","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Returns icon/SMDH region data as a byte slice","Creates a new default initialized bitfield.","Creates a new default initialized bitfield.","Creates a new default initialized bitfield.","Creates a new default initialized bitfield.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Returns a reference to “plain region”","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Returns the RomFS region data as a byte slice","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","A wrapper struct of ExeFs, used to store information about …","Raw ExeFS Header https://www.3dbrew.org/wiki/ExeFS#Format","Raw ExeFS data https://www.3dbrew.org/wiki/ExeFS","ExeFS File header data","","","","","","","","","","","","","Returns a file that is referenced by a given header","Retrieves a file by its name","Returns a file header with a given filename","Returns an iterator over file headers that are used","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Age Rating Data …","Age Rating Region index …","","","","","","","","","","","","SMDH EULA Version","","","","SMDH Icon Data(actual)","","","","","","","SMDH Title language index …","Matchmaker ID data …","","","","","","","","","","","","","An iterator over x and y coordinates and an immutable …","An iterator over x and y coordinates and a mutable …","","","","","","Region Lockout Data …","SMDH Pixel data, it’s actually BGR and not RGB","","","SMDH Header data https://www.3dbrew.org/wiki/SMDH","SMDH builder","SMDH error type","SMDH Flags data https://www.3dbrew.org/wiki/SMDH#Flags","SMDH Icon data wrapper …","SMDH Application title data …","","","","","","","","Returns age rating data(of a given region)","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Returns a byte slice pointing to data of this struct","Returns a reference to big icon data","Returns the “bit ID”","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the SMDH","Returns the SMDH builder","","","Returns the CEC/StreetPass id","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the EULA version …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Returns SMDH Flags https://www.3dbrew.org/wiki/SMDH#Flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Returns the ID","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Returns the long description data","Returns the matchmaker id data","","Creates a new default initialized bitfield.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Returns optimal/preferred/most representative animation …","Returns an iterator over x and y coordinates and an …","Returns an iterator over x and y coordinates and a mutable …","Returns publisher data","Returns the raw imge data","Returns region lockout data","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Returns the short description data","Returns a reference to small icon data","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns title data(in a given language)","Copies this icon into a new BMP Image","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Gets the width of the icon","Sets the icon data","Sets the long description","Sets the publisher","Sets the short description","Sets the small icon data. If not set big icon will be …","","","A wrapper over u8 array of a fixed size, allowing it to be …","An error for SizedCString construction","A UTF-16 version of SizedCString","","Returns a reference to string stored within, or …","","","","","","","","","","","Returns a reference to data stored inside","Returns a reference to data stored inside","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if string inside this struct is all zeroes","Checks if string inside this struct is all zeroes","","","","Converts a SizedCStringUtf16 to a Rust String, returing an …","Converts to a string, replacing invalid UTF-8 sequences …","Converts a SizedCStringUtf16 to a Rust String, replacing …","","","","","","","","","","","","","","Type alias for convienent usage of TicketInner","Ticket Data, excluding “Issuer” field …","","","","","","Returns the common key index","","Returns the decrypted title key","Returns the un-decrypted title key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","Content chunk record …","Content Index …","Content info record data …","Content type flags …","","","","","","","","","","","A type alias for convienency","TMD Header, excluding Signature Issuer …","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Returns slice of content chunk","Returns the contet count","The intersection of a source flags value with the …","Get a flags value with all bits unset.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Returns the hash","Returns the content ID","Returns ContentIndex of this content chunk","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Checks if this content chunk is all zeroed out","Yield a set of contained flags values.","Yield a set of contained named flags values.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Returns size of content referenced by this chunk","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the Title ID of this TMD if it’s a valid TitleId …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","Returns the content type","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values."],"i":[8,5,0,0,8,4,0,8,8,8,8,8,8,8,8,8,8,4,5,0,7,8,8,8,8,7,0,8,5,7,8,5,7,44,44,0,5,7,5,7,0,5,7,0,8,8,5,7,8,8,8,8,8,5,7,44,0,44,0,8,5,7,44,0,0,0,8,0,0,0,0,5,7,8,8,5,7,8,5,7,8,5,7,141,141,141,0,0,0,0,0,23,26,25,27,24,23,26,25,27,24,23,23,23,24,24,23,26,27,27,24,26,25,27,24,23,27,26,26,25,27,24,25,23,23,25,23,23,24,26,25,27,24,26,25,27,24,23,26,25,27,24,15,15,0,39,37,15,13,13,0,0,0,0,36,13,0,39,37,0,39,37,0,0,0,0,15,36,36,0,42,39,142,143,144,35,15,13,36,37,42,39,142,143,144,35,15,13,36,37,35,15,36,37,35,15,36,37,39,39,42,39,35,15,36,15,36,35,42,39,35,15,15,13,13,36,36,37,42,39,142,143,144,35,15,13,13,36,37,39,15,35,35,35,15,36,42,39,142,143,144,35,15,13,36,37,39,0,35,35,13,39,39,39,35,15,36,37,15,13,36,42,39,142,143,144,35,15,13,36,37,42,39,142,143,144,35,15,13,36,37,42,39,142,143,144,35,15,13,36,37,0,0,0,0,0,0,145,145,145,52,52,52,52,146,146,146,146,146,146,146,146,146,146,146,52,52,52,147,147,52,52,52,52,145,145,52,52,52,52,0,69,70,0,0,0,0,0,0,69,64,64,64,64,70,70,70,0,64,69,62,65,62,65,62,65,62,67,65,68,69,64,70,62,63,67,65,68,69,64,70,62,63,62,67,67,67,65,68,69,70,62,63,65,68,69,70,62,63,68,65,68,69,64,64,70,62,63,65,68,69,64,70,62,63,68,67,67,65,68,69,64,70,62,63,68,67,63,68,62,67,65,65,65,62,65,68,69,70,62,63,64,65,68,69,64,70,62,63,65,68,69,64,70,62,63,67,65,68,69,64,70,62,63,0,76,0,0,0,76,0,0,0,0,71,77,72,73,74,75,76,71,77,72,73,74,75,76,71,71,72,73,74,75,76,72,73,74,75,76,71,71,72,71,71,72,73,74,75,76,77,72,73,74,75,76,71,77,72,73,74,75,76,77,71,77,71,72,73,74,75,76,77,72,73,74,75,76,77,72,73,74,75,76,71,77,72,73,74,75,76,0,96,102,0,0,0,0,0,0,81,102,81,81,81,81,81,81,78,80,81,82,0,0,78,81,94,92,94,92,92,92,78,81,99,0,0,79,0,0,0,99,99,0,0,99,99,94,96,78,82,82,82,82,82,82,99,99,99,99,81,81,81,79,79,79,0,0,0,0,0,0,96,94,92,0,81,81,81,80,82,81,81,81,81,78,0,96,0,102,0,78,81,81,82,82,92,78,79,80,81,82,78,79,80,81,82,78,79,80,81,82,78,79,80,81,82,78,79,80,81,82,78,78,79,79,80,80,81,81,82,82,78,79,80,81,82,78,79,80,81,82,104,84,85,78,79,86,87,80,88,89,90,91,92,93,94,95,81,96,97,98,99,100,101,102,103,82,104,84,85,78,79,86,87,80,88,89,90,91,92,93,94,95,81,96,97,98,99,100,101,102,103,82,84,85,78,79,86,87,80,88,89,90,91,92,93,94,95,81,96,97,98,99,100,101,102,103,82,84,85,78,79,86,87,80,88,89,90,91,92,93,94,95,81,96,97,98,99,100,101,102,103,82,78,79,80,81,82,78,79,80,81,82,91,93,100,101,78,79,80,81,82,78,79,80,81,82,0,104,104,104,78,79,80,81,82,104,84,85,78,78,78,78,78,79,79,79,79,79,86,87,80,80,80,80,80,88,89,90,91,92,93,94,95,81,81,81,81,81,96,97,99,100,101,102,103,82,82,82,82,82,84,85,78,79,86,87,80,88,89,90,91,91,92,93,93,94,95,81,96,97,98,99,100,100,101,101,102,103,82,78,79,80,81,82,78,78,79,79,80,80,81,81,82,82,78,79,80,81,82,78,79,80,81,82,78,79,80,81,82,104,104,78,79,80,81,82,78,79,80,81,82,78,79,80,81,82,84,85,78,79,86,87,80,88,89,90,91,92,93,94,95,81,96,97,98,99,100,101,102,103,82,78,79,80,81,82,78,79,80,81,82,78,79,80,81,82,104,78,79,80,81,82,78,79,80,81,82,104,91,93,100,101,78,79,80,81,82,104,78,79,80,81,82,0,104,78,79,80,81,82,78,79,80,81,82,78,79,80,81,82,78,79,80,81,82,84,85,78,79,86,87,80,88,89,90,91,92,93,94,95,81,96,97,98,99,100,101,102,103,82,78,79,80,81,82,84,85,78,79,86,87,80,88,89,90,91,92,93,94,95,81,96,97,98,99,100,101,102,103,82,84,85,78,79,86,87,80,88,89,90,91,92,93,94,95,81,96,97,98,99,100,101,102,103,82,104,84,85,78,79,86,87,80,88,89,90,91,92,93,94,95,81,96,97,98,99,100,101,102,103,82,78,79,80,81,82,148,148,149,149,150,150,0,0,0,0,105,111,109,110,105,111,109,110,109,110,109,110,111,105,109,109,105,111,109,110,105,109,110,105,109,110,109,110,105,109,110,105,109,110,105,111,109,110,0,151,151,151,151,151,151,151,0,0,0,0,0,0,0,115,114,115,115,0,0,114,112,112,112,115,121,113,114,115,121,112,0,121,121,112,0,119,121,114,121,114,121,0,0,119,119,119,119,115,114,113,119,113,112,112,112,0,0,121,115,114,115,115,0,0,121,121,0,0,0,0,0,0,121,119,114,121,115,112,115,31,113,114,115,31,31,117,113,114,115,113,114,115,113,114,115,113,114,115,113,113,114,114,115,115,113,114,115,113,114,115,118,119,31,120,112,113,114,115,117,121,122,123,116,124,125,126,118,119,31,120,112,113,114,115,117,121,122,123,116,124,125,126,118,31,31,31,31,31,120,112,113,114,115,117,121,122,123,116,124,31,120,112,113,114,115,117,121,122,123,116,124,113,114,115,113,114,115,124,113,114,115,113,114,115,31,113,114,115,31,119,119,31,120,112,113,113,113,113,113,114,114,114,114,114,115,115,115,115,115,117,121,122,123,116,124,125,126,118,119,119,119,31,120,112,113,114,115,117,121,122,123,116,124,124,125,126,113,114,115,113,113,114,114,115,115,113,114,115,113,114,115,113,114,115,117,113,114,115,113,114,115,113,114,115,118,119,31,120,112,113,114,115,117,121,122,123,116,124,125,126,113,114,115,125,126,113,114,115,113,114,115,113,114,115,113,114,115,122,31,31,124,125,126,113,114,115,31,116,116,122,116,31,113,114,115,113,114,115,122,31,119,113,114,115,113,114,115,113,114,115,31,116,31,120,112,113,114,115,117,121,122,123,116,124,119,113,114,115,118,119,31,120,112,113,114,115,117,121,122,123,116,116,116,124,125,126,118,119,31,120,112,113,114,115,117,121,122,123,116,124,125,126,118,119,31,120,112,113,114,115,117,121,122,123,116,124,125,126,113,114,115,116,118,118,118,118,118,152,152,0,0,0,127,132,127,132,128,127,132,128,132,128,132,128,132,128,127,127,132,128,127,132,132,128,127,132,128,132,128,132,128,127,128,132,128,127,132,128,128,127,132,128,127,132,128,33,33,33,0,0,49,49,49,49,49,33,49,33,33,49,136,136,136,136,136,136,136,0,138,136,136,138,136,0,0,136,136,136,136,0,136,136,136,136,136,136,0,138,138,136,136,136,136,136,136,136,136,136,28,137,50,138,136,28,137,50,138,136,50,28,137,50,138,136,28,137,50,138,136,136,136,136,136,28,137,50,138,136,136,28,137,50,138,136,136,136,136,136,28,137,50,138,136,136,136,136,136,136,136,50,50,136,136,136,28,137,50,138,136,136,136,136,50,136,136,136,50,136,136,136,136,136,137,137,28,137,50,138,136,28,137,50,136,28,137,50,138,136,28,137,50,138,136,28,137,50,138,136,136,139,0,0,0,0,139,32,139,34,32,32,139,34,34,139,0,0,139,139,139,139,139,139,139,139,139,38,32,40,140,139,38,32,40,140,139,38,38,32,40,140,139,32,40,140,139,139,139,34,34,139,139,139,38,32,40,140,139,139,139,139,139,32,40,140,139,139,139,139,139,139,139,40,40,40,139,139,139,32,40,140,139,139,139,139,40,139,139,38,139,139,139,40,139,139,139,34,32,40,140,139,139,32,40,140,139,32,40,140,139,40,38,32,40,140,139,139],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]]],[[4,[3]]]],[[[2,[1]]],-1,[]],0,[[[5,[-1]]],[[5,[-1]]],6],[[[7,[-1]]],[[7,[-1]]],6],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[[[5,[-1]]],-1,[]],[[[7,[-1]]],[[2,[-1]]],[]],0,[[8,9],10],[[8,9],10],[[[5,[-1]],9],10,11],[[[7,[-1]],9],10,11],[12,8],[13,8],[-1,-1,[]],[14,8],[15,8],[-1,-1,[]],[-1,-1,[]],[[[2,[1]]],[[4,[-1]]],[]],0,[-1,16,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],17],0,0,0,[8,[[19,[18]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]]],[[4,[3]]]],[[[2,[1]]],23],[23,[[2,[1]]]],[24,24],[[-1,-2],3,[],[]],[23,[[4,[25]]]],[26,[[2,[1]]]],[27,[[29,[28]]]],[27,[[0,[30]]]],[[24,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[23,24],[27,[[4,[31]]]],[26,32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,[[19,[27]]]],[[],17],[25,19],[23,[[4,[33]]]],[23,[[4,[34]]]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[15,15],[36,36],[37,37],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[[39,[38]]],[[2,[40]]]],[[[39,[38]]],41],[[[42,[-1,-2]]],-1,[43,44,11],45],[[[39,[-1]]],-1,[43,44,11]],[[],35],[[15,15],16],[[36,36],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[35,3],[[[42,[-1,-2]],9],10,[43,44,11],45],[[[39,[-1]],9],10,[43,44,11]],[[35,9],10],[[15,9],10],[[15,9],10],[[13,9],10],[[13,9],10],[[36,9],10],[[36,9],10],[[37,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[46,13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[1]]],[[4,[[39,[-1]]]]],[43,44,11]],[47,[[21,[15,13]]]],[47,[[4,[35]]]],[[35,15],[[4,[[29,[1]]]]]],[[],[[4,[35]]]],[[15,-1],3,48],[[36,-1],3,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[49]]],1],[[[29,[1]],[29,[1]]],[[4,[[29,[1]]]]]],[[],35],[[35,15,[29,[1]]],3],[13,[[19,[18]]]],[[[39,[38]]],[[4,[50]]]],[[[39,[49]]],[[4,[[29,[1]]]]]],[[[39,[49]]],[[29,[1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,[[-1,[2,[1]]],3,[]],[[-1,[2,[1]],[2,[1]]],[[21,[3,14]]],[]],[[-1,[51,[1]]],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[[-1,-2],3,[],[]],[[-1,[53,[1]],[53,[1]]],3,[]],[[-1,[54,[[53,[1]]]]],3,[]],[[-1,[53,[1]]],3,[]],[[-1,[2,[[53,[1]]]],[2,[[53,[1]]]]],[[21,[3,55]]],[]],[[-1,[51,[[53,[1]]]]],3,[]],[[-1,[2,[[53,[1]]]]],3,[]],[[-1,[2,[1]],[2,[1]]],[[21,[[2,[1]],56]]],[]],[[-1,[51,[1]]],[[21,[[2,[1]],56]]],[]],[[-1,[2,[1]]],[[21,[[2,[1]],56]]],[]],[[-1,[2,[1]]],[[21,[[58,[1,57]],56]]],[]],[[-1,-2],3,[],59],[[52,9],[[21,[3,60]]]],[-1,-1,[]],[-1,-2,[],[]],[[[53,[1]],[53,[1]]],-1,[]],[[[2,[1]],[2,[1]]],[[21,[-1,61]]],[]],[[[53,[1,-1]],17],3,[]],[[[2,[1]],17],3],[[[2,[1]]],[[21,[[2,[1]],56]]]],[-1,-2,[],[]],[[-1,[2,[1]]],[[21,[3,14]]],[]],[[-1,[51,[1]]],[[21,[3,14]]],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[[[53,[1,-1]]],[[21,[[2,[1]],56]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[62,63],[[21,[62,64]]]],[65,66],[[62,66],62],[65,66],[[62,66],62],[65,66],[[62,66],62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,[[21,[[58,[1]],64]]]],[[],62],[[[2,[1]]],[[4,[3]]]],[[[2,[1]]],67],[65,65],[68,68],[69,69],[70,70],[62,62],[63,63],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[68,69],[[65,9],10],[[68,9],10],[[69,9],10],[[64,9],10],[[64,9],10],[[70,9],10],[[62,9],10],[[63,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[68,[[29,[1]]]],[67,16],[67,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,66],[[],17],[[[58,[1]],66,69],63],[68,66],[[62,17,63],62],[[67,68],[[2,[1]]]],[65,[[0,[30]]]],[65,[[29,[68]]]],[65,[[29,[1]]]],[[62,70],62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[[2,[1]]],[[29,[1]]]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]]],[[4,[3]]]],[[[2,[1]]],71],[72,72],[73,73],[74,74],[75,75],[76,76],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[71,74],[71,[[0,[30]]]],[72,17],[71,74],[71,[[19,[73]]]],[[72,9],10],[[73,9],10],[[74,9],10],[[75,9],10],[[76,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[71,72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],17],[77,19],[71,74],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],78],[[],79],[[],80],[[],81],[[],82],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[78,78],3],[[79,79],3],[[80,80],3],[[81,81],3],[[82,82],3],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[78,78],3],[[79,79],3],[[80,80],3],[[81,81],3],[[82,82],3],[78,1],[78,1],[79,1],[79,1],[80,1],[80,1],[81,83],[81,83],[82,41],[82,41],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[78,78],3],[[79,79],3],[[80,80],3],[[81,81],3],[[82,82],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[85,85],[78,78],[79,79],[86,86],[87,87],[80,80],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[81,81],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[82,82],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[78,78],[79,79],[80,80],[81,81],[82,82],[[78,78],16],[[79,79],16],[[80,80],16],[[81,81],16],[[82,82],16],[[],91],[[],93],[[],100],[[],101],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[],78],[[],79],[[],80],[[],81],[[],82],0,[104,[[4,[105]]]],[104,[[4,[[2,[1]]]]]],[104,[[4,[[5,[86]]]]]],[[78,-1],3,106],[[79,-1],3,106],[[80,-1],3,106],[[81,-1],3,106],[[82,-1],3,106],[104,85],[[84,9],10],[[85,9],10],[[78,9],10],[[78,9],10],[[78,9],10],[[78,9],10],[[78,9],10],[[79,9],10],[[79,9],10],[[79,9],10],[[79,9],10],[[79,9],10],[[86,9],10],[[87,9],10],[[80,9],10],[[80,9],10],[[80,9],10],[[80,9],10],[[80,9],10],[[88,9],10],[[89,9],10],[[90,9],10],[[91,9],10],[[92,9],10],[[93,9],10],[[94,9],10],[[95,9],10],[[81,9],10],[[81,9],10],[[81,9],10],[[81,9],10],[[81,9],10],[[96,9],10],[[97,9],10],[[99,9],10],[[100,9],10],[[101,9],10],[[102,9],10],[[103,9],10],[[82,9],10],[[82,9],10],[[82,9],10],[[82,9],10],[[82,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,91],[-1,-1,[]],[-1,-1,[]],[1,93],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[66,100],[66,101],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,[[19,[78]]]],[1,[[19,[79]]]],[1,[[19,[80]]]],[83,[[19,[81]]]],[41,[[19,[82]]]],[1,78],[1,78],[1,79],[1,79],[1,80],[1,80],[83,81],[83,81],[41,82],[41,82],[1,78],[1,79],[1,80],[83,81],[41,82],[-1,78,106],[-1,79,106],[-1,80,106],[-1,81,106],[-1,82,106],[47,[[19,[78]]]],[47,[[19,[79]]]],[47,[[19,[80]]]],[47,[[19,[81]]]],[47,[[19,[82]]]],[[[2,[1]]],[[4,[104]]]],[104,84],[[78,78],3],[[79,79],3],[[80,80],3],[[81,81],3],[[82,82],3],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[78,78],16],[[79,79],16],[[80,80],16],[[81,81],16],[[82,82],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[78],[79],[80],[81],[82],[78,16],[79,16],[80,16],[81,16],[82,16],[78,16],[79,16],[80,16],[81,16],[82,16],[104,16],[78,[[107,[78]]]],[79,[[107,[79]]]],[80,[[107,[80]]]],[81,[[107,[81]]]],[82,[[107,[82]]]],[78,[[108,[78]]]],[79,[[108,[79]]]],[80,[[108,[80]]]],[81,[[108,[81]]]],[82,[[108,[82]]]],[104,[[4,[[2,[1]]]]]],[[],91],[[],93],[[],100],[[],101],[78,78],[79,79],[80,80],[81,81],[82,82],[104,[[4,[[2,[1]]]]]],[[78,78],3],[[79,79],3],[[80,80],3],[[81,81],3],[[82,82],3],0,[104,[[4,[[2,[1]]]]]],[[78,78,16],3],[[79,79,16],3],[[80,80,16],3],[[81,81,16],3],[[82,82,16],3],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[[78,78],3],[[79,79],3],[[80,80],3],[[81,81],3],[[82,82],3],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[78,78],3],[[79,79],3],[[80,80],3],[[81,81],3],[[82,82],3],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[78,78],78],[[79,79],79],[[80,80],80],[[81,81],81],[[82,82],82],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[109,109],[110,110],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[111,110],[[2,[1]]]],[[105,[2,[1]]],[[19,[[7,[1]]]]]],[[109,[2,[1]]],[[19,[110]]]],[109,[[0,[30]]]],[[105,9],10],[[111,9],10],[[109,9],10],[[110,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[31,112],113],[[],113],[[],114],[[],115],[31,[[29,[1]]]],[31,116],[117,83],[[113,113],113],[[114,114],114],[[115,115],115],[[113,113],3],[[114,114],3],[[115,115],3],[[113,113],113],[[114,114],114],[[115,115],115],[[113,113],3],[[114,114],3],[[115,115],3],[113,1],[113,1],[114,66],[114,66],[115,66],[115,66],[[113,113],113],[[114,114],114],[[115,115],115],[[113,113],3],[[114,114],3],[[115,115],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[118,[[21,[31,119]]]],[[],118],[[[2,[1]]],[[4,[3]]]],[[[2,[1]]],31],[31,66],[31,31],[120,120],[112,112],[113,113],[114,114],[115,115],[117,117],[121,121],[122,122],[123,123],[116,116],[124,124],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[113,113],[114,114],[115,115],[[113,113],16],[[114,114],16],[[115,115],16],[[],124],[[113,113],113],[[114,114],114],[[115,115],115],[[],113],[[],114],[[],115],[31,120],[[113,-1],3,106],[[114,-1],3,106],[[115,-1],3,106],[31,115],[[119,9],10],[[119,9],10],[[31,9],10],[[120,9],10],[[112,9],10],[[113,9],10],[[113,9],10],[[113,9],10],[[113,9],10],[[113,9],10],[[114,9],10],[[114,9],10],[[114,9],10],[[114,9],10],[[114,9],10],[[115,9],10],[[115,9],10],[[115,9],10],[[115,9],10],[[115,9],10],[[117,9],10],[[121,9],10],[[122,9],10],[[123,9],10],[[116,9],10],[[124,9],10],[[125,9],10],[[126,9],10],[-1,-1,[]],[-1,-1,[]],[[[3,[66,66]]],119],[127,119],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,124],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,[[19,[113]]]],[66,[[19,[114]]]],[66,[[19,[115]]]],[1,113],[1,113],[66,114],[66,114],[66,115],[66,115],[1,113],[66,114],[66,115],[-1,113,106],[-1,114,106],[-1,115,106],[47,[[19,[113]]]],[47,[[19,[114]]]],[47,[[19,[115]]]],[117,66],[[113,113],3],[[114,114],3],[[115,115],3],[[113,113],113],[[114,114],114],[[115,115],115],[[113,113],16],[[114,114],16],[[115,115],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[113],[114],[115],[-1,-2,[],[]],[-1,-2,[],[]],[113,16],[114,16],[115,16],[113,16],[114,16],[115,16],[113,[[107,[113]]]],[114,[[107,[114]]]],[115,[[107,[115]]]],[113,[[108,[113]]]],[114,[[108,[114]]]],[115,[[108,[115]]]],[122,128],[31,117],[[],17],[[],124],[125,[[19,[[3,[1,1,124]]]]]],[126,[[19,[[3,[1,1,124]]]]]],[113,113],[114,114],[115,115],[31,129],[116,126],[116,125],[122,128],[116,[[29,[124]]]],[31,114],[[113,113],3],[[114,114],3],[[115,115],3],[[113,113,16],3],[[114,114,16],3],[[115,115,16],3],[122,128],[31,116],[119,[[19,[18]]]],[[113,113],113],[[114,114],114],[[115,115],115],[[113,113],3],[[114,114],3],[[115,115],3],[[113,113],113],[[114,114],114],[[115,115],115],[[31,121],122],[116,130],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[[113,113],3],[[114,114],3],[[115,115],3],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[131,[[21,[116]]]],[130,[[21,[116]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[113,113],113],[[114,114],114],[[115,115],115],[[],1],[[118,116],118],[[118,47],[[21,[118,119]]]],[[118,47],[[21,[118,119]]]],[[118,47],[[21,[118,119]]]],[[118,116],118],0,0,0,0,0,0,[132,[[21,[47,133]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,132],[128,128],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[132,[[2,[1]]]],[128,[[2,[41]]]],[[127,9],10],[[127,9],10],[[132,9],10],[[128,9],10],[-1,-1,[]],[[[29,[1]]],132],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,16],[128,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[128,[[21,[20,134]]]],[132,[[135,[47]]]],[128,20],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[47,[[21,[128]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]]],[[4,[3]]]],[[[2,[1]]],49],[[49,9],10],[33,1],[[],17],[33,[[4,[[29,[1]]]]]],[33,[[29,[1]]]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],136],[[136,136],136],[[136,136],3],[[136,136],136],[[136,136],3],[136,41],[136,41],[[136,136],136],[[136,136],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,136],[28,28],[137,137],[50,50],[138,138],[136,136],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[136,136],[[136,136],16],[[136,136],136],[[],136],[[28,28],16],[[137,137],16],[[50,50],16],[[138,138],16],[[136,136],16],[[136,-1],3,106],[[28,9],10],[[137,9],10],[[50,9],10],[[138,9],10],[[136,9],10],[[136,9],10],[[136,9],10],[[136,9],10],[[136,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,[[19,[136]]]],[41,136],[41,136],[41,136],[-1,136,106],[47,[[19,[136]]]],[83,[[4,[50]]]],[50,66],[[136,136],3],[[136,136],136],[[136,136],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[136],[136,16],[136,16],[50,16],[136,[[107,[136]]]],[136,[[108,[136]]]],[136,136],[50,138],[[136,136],3],[[136,136,16],3],[[136,136],136],[[136,136],3],[[136,136],136],[137,[[29,[1]]]],[137,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,[[4,[50]]]],[137,[[4,[50]]]],[50,83],[[136,136],3],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[136,136],136],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],139],[[139,139],139],[[139,139],3],[[139,139],139],[[139,139],3],[139,41],[139,41],[[139,139],139],[[139,139],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]]],[[4,[3]]]],[[[2,[1]]],38],[32,32],[40,40],[140,140],[139,139],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[139,139],[[139,139],16],[34,[[2,[40]]]],[34,41],[[139,139],139],[[],139],[[139,-1],3,106],[[38,9],10],[[32,9],10],[[40,9],10],[[140,9],10],[[139,9],10],[[139,9],10],[[139,9],10],[[139,9],10],[[139,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,[[19,[139]]]],[41,139],[41,139],[41,139],[-1,139,106],[47,[[19,[139]]]],[40,[[29,[1]]]],[40,66],[40,32],[[139,139],3],[[139,139],139],[[139,139],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139],[139,16],[139,16],[40,16],[139,[[107,[139]]]],[139,[[108,[139]]]],[[],17],[139,139],[[139,139],3],[[139,139,16],3],[40,83],[[139,139],139],[[139,139],3],[[139,139],139],[34,[[4,[50]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[139,139],3],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[40,139],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[139,139],139]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"tuple"],[6,"CytrynaResult",0],[4,"OwnedOrBorrowed",0],[8,"Clone",1914],[4,"VecOrSlice",0],[4,"CytrynaError",0],[3,"Formatter",1915],[6,"Result",1915],[8,"Debug",1915],[4,"FromHexError",1916],[4,"KeyIndexParseError",142],[3,"StreamCipherError",1917],[4,"KeyIndex",142],[15,"bool"],[15,"usize"],[8,"Error",1918],[4,"Option",1919],[3,"String",1920],[4,"Result",1921],[3,"TypeId",1922],[3,"Cia",86],[3,"CiaHeader",86],[3,"ContentRegionIter",86],[3,"ContentRegion",86],[3,"MetaRegion",86],[3,"MaybeTitleId",1658],[15,"array"],[8,"Iterator",1923],[3,"Smdh",1201],[4,"ContentIndex",1797],[6,"Ticket",1643],[6,"Tmd",1797],[3,"KeyBag",142],[4,"KeyType",142],[4,"SignatureType",142],[3,"TmdInner",1797],[4,"SignedData",142],[3,"ContentChunk",1797],[15,"u16"],[3,"SignedDataInner",142],[8,"Sized",1924],[8,"FromBytes",0],[8,"Signature",142],[3,"ParseIntError",1925],[15,"str"],[8,"Hasher",1926],[3,"TicketInner",1643],[3,"TitleId",1658],[3,"InOutBuf",1927],[3,"NoPadding",291],[3,"GenericArray",1928],[3,"InOut",1929],[3,"NotEqualError",1930],[3,"UnpadError",1931],[3,"Global",1932],[3,"Vec",1933],[8,"BlockClosure",1934],[3,"Error",1915],[3,"InvalidLength",1935],[3,"FirmBuilder",330],[3,"FirmwareSection",330],[4,"FirmBuilderError",330],[3,"FirmHeader",330],[15,"u32"],[3,"Firm",330],[3,"SectionHeader",330],[4,"CopyMethod",330],[4,"FirmSignature",330],[3,"Hb3dsx",455],[3,"Hb3dsxHeader",455],[3,"Hb3dsxExheader",455],[3,"RelocationHeader",455],[3,"Relocation",455],[4,"RelocationType",455],[3,"RelocationIter",455],[3,"ContentType",541],[3,"NcchFlagsOptions",541],[3,"ExheaderFlags",541],[3,"FsAccessInfo",541],[3,"Arm9Descriptors",541],[15,"u64"],[3,"NcchHeader",541],[3,"NcchFlags",541],[3,"Exheader",541],[3,"SystemControlInfo",541],[3,"CodeSetInfo",541],[3,"AccessControlInfo",541],[3,"Arm11LocalSystemCaps",541],[3,"Flag0",541],[4,"Old3dsSystemMode",541],[3,"Flag1",541],[4,"New3dsSystemMode",541],[3,"StorageInfo",541],[4,"ResourceLimitCategory",541],[3,"Arm11KernelCaps",541],[3,"KernelCapRaw",541],[4,"KernelCap",541],[3,"SyscallMask",541],[3,"Arm11Flags",541],[4,"Arm11MemoryType",541],[3,"Arm9AccessControl",541],[3,"Ncch",541],[3,"ExeFs",1144],[8,"IntoIterator",1936],[3,"Iter",1937],[3,"IterNames",1937],[3,"ExeFsHeader",1144],[3,"FileHeader",1144],[3,"ExeFsInner",1144],[4,"AgeRatingRegion",1201],[3,"AgeRating",1201],[3,"RegionLockout",1201],[3,"SmdhFlags",1201],[3,"IconData",1201],[3,"MatchmakerId",1201],[3,"SmdhBuilder",1201],[4,"SmdhError",1201],[3,"EulaVersion",1201],[4,"Language",1201],[3,"SmdhTitle",1201],[3,"SmdhIcon",1201],[3,"Rgb565Pixel",1201],[3,"PixelIteratorMut",1201],[3,"PixelIterator",1201],[4,"SizedCStringError",1597],[3,"SizedCStringUtf16",1597],[15,"f32"],[3,"Image",1938],[4,"DynamicImage",1939],[3,"SizedCString",1597],[3,"Utf8Error",1940],[3,"FromUtf16Error",1920],[4,"Cow",1941],[3,"Category",1658],[3,"MaybeTitleIdBe",1658],[4,"Platform",1658],[3,"ContentType",1797],[3,"ContentInfo",1797],[13,"InvalidLength",83],[3,"Rsa4096Sha256",142],[3,"Rsa2048Sha256",142],[3,"EcdsaSha256",142],[8,"StreamCipher",291],[8,"BlockDecryptMut",291],[8,"KeyIvInit",291],[13,"MapMemoryRangeEnd",1138],[13,"KernelReleaseVersion",1138],[13,"MapMemoryRangeStart",1138],[3,"RomfsHeader",1186],[13,"InvalidImageSize",1595]]},\
"mk3dsx":{"doc":"","t":"DLLLLLLLLLLLMLFMLLLLL","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","input_file","into","main","output_file","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"mk3dsx"],[21,"clap_builder::builder::command"],[22,"core::fmt"],[23,"core::fmt"],[24,"clap_builder"],[25,"core::result"],[26,"clap_builder::util::id"],[27,"core::option"],[28,"anyhow"],[29,"core::any"]],"d":["","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[2,3],4],[-1,-1,[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[],[[9,[8]]]],0,[-1,-2,[],[]],[[],[[11,[10]]]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[[2,5],[[7,[10,6]]]],[[2,5],[[7,[10,6]]]]],"c":[],"p":[[3,"Command",21],[3,"Args",0],[3,"Formatter",22],[6,"Result",22],[3,"ArgMatches",23],[6,"Error",24],[4,"Result",25],[3,"Id",26],[4,"Option",27],[15,"tuple"],[6,"Result",28],[3,"TypeId",29]]},\
"readctr":{"doc":"","t":"F","n":["main"],"q":[[0,"readctr"],[1,"anyhow"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[15,"tuple"],[6,"Result",1]]},\
"smdhtool":{"doc":"","t":"DENNLLLLLLLLMLLLLLLLLLLLLFLLLLLLLLLLMMMMMMMMM","n":["Args","Commands","Create","Dump","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","cmd","command","command_for_update","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","main","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","big_icon_path","icon","input_path","long_desc","output","publisher","short_desc","small_icon","small_icon_path"],"q":[[0,"smdhtool"],[36,"smdhtool::Commands"],[45,"clap_builder::builder::command"],[46,"clap_builder::parser::matches::arg_matches"],[47,"clap_builder"],[48,"core::result"],[49,"clap_builder::util::id"],[50,"core::option"],[51,"anyhow"],[52,"core::any"]],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,6,6,3,3,6,6,3,6,3,6,3,3,3,3,6,3,6,3,6,3,6,3,6,0,3,6,3,6,3,6,3,6,3,6,14,15,14,15,15,15,15,15,14],"f":[0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],1],[-1,-1,[]],[-1,-1,[]],[2,[[5,[3,4]]]],[2,[[5,[6,4]]]],[2,[[5,[3,4]]]],[2,[[5,[6,4]]]],[[],[[8,[7]]]],[9,10],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[12,[11]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[[3,2],[[5,[11,4]]]],[[6,2],[[5,[11,4]]]],[[3,2],[[5,[11,4]]]],[[6,2],[[5,[11,4]]]],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Command",45],[3,"ArgMatches",46],[3,"Args",0],[6,"Error",47],[4,"Result",48],[4,"Commands",0],[3,"Id",49],[4,"Option",50],[15,"str"],[15,"bool"],[15,"tuple"],[6,"Result",51],[3,"TypeId",52],[13,"Dump",36],[13,"Create",36]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
